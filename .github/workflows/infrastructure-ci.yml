name: Infrastructure CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'infrastructure/**'
      - 'docker-compose.yml'
      - '.github/workflows/infrastructure-ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'infrastructure/**'
      - 'docker-compose.yml'
      - '.github/workflows/infrastructure-ci.yml'

jobs:
  validate:
    name: Validate Infrastructure Configuration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Validate docker-compose.yml
        run: |
          docker-compose -f docker-compose.yml config
      
      - name: Lint Kong configuration
        run: |
          if [ -f "infrastructure/api-gateway/kong.yml" ]; then
            if command -v kong-lint &> /dev/null; then
              kong-lint lint infrastructure/api-gateway/kong.yml
            else
              echo "kong-lint not available, skipping"
            fi
          else
            echo "Using kong.yml.template, validation requires environment variables"
          fi
      
      - name: Validate database scripts
        run: |
          if [ -d "infrastructure/database/postgres/init" ]; then
            for sqlfile in infrastructure/database/postgres/init/*.sql; do
              if [ -f "$sqlfile" ]; then
                echo "Validating $sqlfile"
                cat "$sqlfile" | grep -v "^--" | grep ";" > /dev/null || echo "Warning: No SQL commands found in $sqlfile"
              fi
            done
          fi
          
          if [ -d "infrastructure/database/mongodb/init" ]; then
            for jsfile in infrastructure/database/mongodb/init/*.js; do
              if [ -f "$jsfile" ]; then
                echo "Validating $jsfile"
                node -c "$jsfile" || echo "Warning: JavaScript syntax error in $jsfile"
              fi
            done
          fi

  build_kong_config:
    name: Build Kong Config
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        if: hashFiles('infrastructure/api-gateway/Dockerfile') != ''
        uses: docker/setup-buildx-action@v2
      
      - name: Log in to GitHub Container Registry
        if: hashFiles('infrastructure/api-gateway/Dockerfile') != ''
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract branch name
        if: hashFiles('infrastructure/api-gateway/Dockerfile') != ''
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
      
      - name: Generate Kong image tags
        if: hashFiles('infrastructure/api-gateway/Dockerfile') != ''
        id: meta
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.repository_owner }}/haptitalk-kong
          TAGS="${DOCKER_IMAGE}:${{ env.BRANCH_NAME }}"
          
          if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
            TAGS="${TAGS},${DOCKER_IMAGE}:latest"
          fi
          
          VERSION=$(date +'%Y%m%d%H%M%S')
          TAGS="${TAGS},${DOCKER_IMAGE}:${VERSION}"
          
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
      
      - name: Build and push Kong config image
        if: hashFiles('infrastructure/api-gateway/Dockerfile') != ''
        uses: docker/build-push-action@v4
        with:
          context: ./infrastructure/api-gateway
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
